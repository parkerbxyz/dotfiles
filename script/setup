#!/usr/bin/env bash
#
# Install all dotfiles into the home directory

# If $0 exists and is a symbolic link
if [ -L "$0" ]; then
  SCRIPT_SETUP="$(readlink "$0")"
else
  SCRIPT_SETUP="$0"
fi

# Go up to the parent of the script directory
cd "$(dirname "$SCRIPT_SETUP")/.." || exit

# Set $DOTFILESDIR to the "physical" path of the working directory
DOTFILESDIR=$(pwd -P)

# Set paths for dotfiles outside of $HOME based on operating system
case "$OSTYPE" in
"darwin"*) # macOS
  VSCODE="$HOME/Library/Application Support/Code/User"
  ZOOM="/Library/Preferences"
  ;;
"linux"*) # Linux
  VSCODE="$HOME/.config/Code/User"
  ;;
*) # Anything else
  printf '%s\n' "Unsupported OS detected, aborting..." >&2
  exit 1
  ;;
esac

# Include filenames beginning with a ‘.’ in the results of filename expansion
shopt -s dotglob

# Iterate over dotfiles in the root directory
for DOTFILE in *; do
  # Set linked dotfile path
  HOMEFILE="$HOME/$DOTFILE"
  # Append ‘/’ to the name of directories
  [[ -d "$DOTFILE" ]] && DOTFILE+="/"
  # Set absolute dotfile path
  DIRFILE="$DOTFILESDIR/$DOTFILE"

  # Skip script/, terminal/, .git/, .gitignore, LICENSE, and any .txt or .md files
  [[ $DOTFILE =~ (^script\/$|^terminal\/$|^\.git\/$|^.gitignore$|^LICENSE$|\.txt$|\.md$) ]] &&
    continue

  # Configure dotfile-specific paths
  case "$DOTFILE" in
  *vscode-settings*) HOMEFILE="$VSCODE/settings.json" && mkdir -p "$VSCODE" ;;
  *zoom*) # Skip if $ZOOM is empty or unset
    [[ -z "${ZOOM+x}" ]] && continue
    HOMEFILE="$ZOOM/$DOTFILE" && mkdir -p "$ZOOM"
    ;;
  esac

  # If $HOMEFILE is a symbolic link and $DOTFILE is not a directory
  if [[ -L "$HOMEFILE" ]] && ! [[ -d "$DOTFILE" ]]; then
    # Create symbolic link to file
    ln -sfv "$DIRFILE" "$HOMEFILE"
  else
    # Remove $HOMEFILE
    rm -rv "$HOMEFILE" 2>/dev/null
    # Create symbolic link to directory
    ln -sv "$DIRFILE" "$HOMEFILE"
  fi
done

# Setup ~/.dotfiles symlink if missing
HOMEDOTFILES="$HOME/.dotfiles"
if [ "$DOTFILESDIR" != "$HOMEDOTFILES" ]
then
  ln -sf "$DOTFILESDIR" "$HOMEDOTFILES"
fi

# Codespaces configuration
if [ -n "$CODESPACES" ]; then
  # Fix up permissions for Codespaces
  chmod 700 /workspaces

  # Install ZSH tools
  echo "Installing ZSH tools..."
  sudo apt install -y \
    zsh-autosuggestions \
    zsh-syntax-highlighting

  # Install Starship
  echo "Installing Starship..."
  sudo sh -c "$(curl -fsSL https://starship.rs/install.sh)" -- -y
fi
